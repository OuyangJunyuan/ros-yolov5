;; Auto-generated. Do not edit!


(when (boundp 'ros_yolo::yoloFeedback)
  (if (not (find-package "ROS_YOLO"))
    (make-package "ROS_YOLO"))
  (shadow 'yoloFeedback (find-package "ROS_YOLO")))
(unless (find-package "ROS_YOLO::YOLOFEEDBACK")
  (make-package "ROS_YOLO::YOLOFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude yoloFeedback.msg.html


(defclass ros_yolo::yoloFeedback
  :super ros::object
  :slots (_feedback_vector ))

(defmethod ros_yolo::yoloFeedback
  (:init
   (&key
    ((:feedback_vector __feedback_vector) (make-array 0 :initial-element 0 :element-type :integer))
    )
   (send-super :init)
   (setq _feedback_vector __feedback_vector)
   self)
  (:feedback_vector
   (&optional __feedback_vector)
   (if __feedback_vector (setq _feedback_vector __feedback_vector)) _feedback_vector)
  (:serialization-length
   ()
   (+
    ;; int32[] _feedback_vector
    (* 4    (length _feedback_vector)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32[] _feedback_vector
     (write-long (length _feedback_vector) s)
     (dotimes (i (length _feedback_vector))
       (write-long (elt _feedback_vector i) s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32[] _feedback_vector
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _feedback_vector (instantiate integer-vector n))
     (dotimes (i n)
     (setf (elt _feedback_vector i) (sys::peek buf ptr- :integer)) (incf ptr- 4)
     ))
   ;;
   self)
  )

(setf (get ros_yolo::yoloFeedback :md5sum-) "2ee6f212dbc91cfc6dfefacdb2b93a33")
(setf (get ros_yolo::yoloFeedback :datatype-) "ros_yolo/yoloFeedback")
(setf (get ros_yolo::yoloFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback
int32[] feedback_vector


")



(provide :ros_yolo/yoloFeedback "2ee6f212dbc91cfc6dfefacdb2b93a33")


